{"version":3,"sources":["components/AddPost.tsx","components/AddReply.tsx","components/Post.tsx","components/Feed.tsx","components/SignIn/SignInForm.tsx","components/SignIn/SignInOut.tsx","components/SignIn/SignUpForm.tsx","App.tsx","index.tsx"],"names":["AddPost","props","className","placeholder","type","onChange","doChange","onClick","doClick","AddReply","Post","posts","isReply","user","post","otherPosts","forEach","item","replyTo","nanoid","addItem","e","doReplyClick","doReplyChange","map","Feed","useState","postsList","setPostsList","currentPost","setCurrentPost","currentReply","setCurrentReply","currentUser","setCurrentUser","useEffect","event","currentTarget","value","id","newReply","axios","process","JSON","stringify","get","then","res","data","newPost","SignInForm","formUsername","setFormUsername","formPassword","setFormPassword","console","log","password","username","signIn","to","SignInOut","button","isSignedIn","SignUpForm","newUser","name","App","isLoggedIn","setIsLoggedIn","exact","path","creds","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9958e85f.chunk.js","sourcesContent":["import React from \"react\";\n\ntype AddPostProps = {\n    doChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    doClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nfunction AddPost(props: AddPostProps) {\n    return (\n        <div className=\"post-container add-post-container\">\n            <input\n                placeholder=\"Soc...\"\n                className=\"add-post-input\"\n                type=\"text\"\n                onChange={props.doChange}\n            />\n            <button className=\"btn-add-post btn\" onClick={props.doClick}>Post Soc</button>\n        </div>\n    );\n}\n\nexport default AddPost;\n","import React from \"react\";\n\ntype AddReplyProps = {\n    doChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    doClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nfunction AddReply(props: AddReplyProps) {\n    return(\n        <div className=\"reply add-reply\">\n            <input type=\"text\" placeholder=\"Reply...\" onChange={props.doChange} />\n            <button className=\"btn btn-primary btn-add-post\" onClick={props.doClick}>Reply</button>\n        </div>\n    );\n}\n\nexport default AddReply;","import React from \"react\";\nimport AddReply from \"./AddReply\";\n\nexport type PostType = {\n    nanoid: string;\n    post: string;\n    user: string;\n    replyTo: string;\n    isReply: boolean;\n};\n\ntype PostProps = {\n    nanoid: string;\n    post: string;\n    user: string;\n    replyTo: string;\n    isReply: boolean;\n    otherPosts: PostType[];\n    doReplyChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    doReplyClick: (\n        event: React.MouseEvent<HTMLButtonElement>,\n        id: string\n    ) => void;\n};\n\nfunction Post(props: PostProps) {\n    let posts = !props.isReply\n        ? [\n              <div className=\"post\">\n                  <span className=\"user\">{\"@\" + props.user}</span>\n                  <br />\n                  <span className=\"post-content\">{props.post}</span>\n              </div>,\n          ]\n        : [];\n    props.otherPosts.forEach((item) => {\n        if (item.isReply && item.replyTo === props.nanoid)\n            posts = [\n                ...posts,\n                <div className=\"reply\">\n                    <span className=\"user\">{\"> @\" + item.user}</span>\n                    <br />\n                    <span className=\"post-content\">{item.post}</span>\n                </div>,\n            ];\n    });\n\n    let addItem = (\n        <AddReply\n            doClick={(e) => props.doReplyClick(e, props.nanoid)}\n            doChange={props.doReplyChange}\n        />\n    );\n    return (\n        <div className=\"post-container\">\n            {posts.map((post) => {\n                return [post, addItem];\n            })}\n        </div>\n    );\n}\n\nexport default Post;\n","import axios from \"axios\";\nimport { nanoid } from \"nanoid\";\nimport React, { useEffect, useState } from \"react\";\nimport AddPost from \"./AddPost\";\nimport Post, { PostType } from \"./Post\";\n\ntype FeedProps = {\n    currentUser: string;\n}\n\nfunction Feed(props: FeedProps) {\n    const [postsList, setPostsList] = useState<PostType[]>([]);\n    const [currentPost, setCurrentPost] = useState<string>(\"\");\n    const [currentReply, setCurrentReply] = useState<string>(\"\");\n    const [currentUser, setCurrentUser] = useState<string>(props.currentUser);\n\n    useEffect(() => {\n        setCurrentUser(props.currentUser);\n    }, [props.currentUser])\n\n    const doPostChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCurrentPost(event.currentTarget.value);\n    }\n    \n    const doPostSubmit = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const newPost: PostType = {\n            nanoid: nanoid(),\n            post: currentPost,\n            user: currentUser,\n            replyTo: \"\",\n            isReply: false\n        };\n        setPostsList([...postsList, newPost]);\n        axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/add-post\", JSON.stringify(newPost));\n    }\n\n    const doReplyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setCurrentReply(event.currentTarget.value);\n    };\n\n    const doReplyClick = (event: React.MouseEvent<HTMLButtonElement>, id: string) => {\n        const newReply: PostType = {\n            nanoid: nanoid(),\n            post: currentReply,\n            user: currentUser,\n            replyTo: id,\n            isReply: true\n        }\n        setPostsList([...postsList, newReply]);\n        axios.post(process.env.REACT_APP_BACKEND_URL + `/api/add-reply/${id}`, JSON.stringify(newReply));\n    };\n\n    useEffect(() => {\n        axios\n            .get(process.env.REACT_APP_BACKEND_URL + \"/api/get-posts\")\n            .then((res) => {\n                setPostsList(res.data);\n            });\n    }, []);\n\n    return (\n        <div className=\"feed-container\">\n            <AddPost doChange={doPostChange} doClick={doPostSubmit} />\n            {postsList.map((post) => {\n                return (\n                    <Post\n                        nanoid={post.nanoid}\n                        post={post.post}\n                        user={post.user}\n                        isReply={post.isReply}\n                        replyTo={post.replyTo}\n                        otherPosts={postsList}\n                        doReplyClick={doReplyClick}\n                        doReplyChange={doReplyChange}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Feed;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\ntype SignInFormProps = {\n    signIn: (signedIn: boolean, user: string) => void;\n};\n\nfunction SignInForm(props: SignInFormProps) {\n    const [formUsername, setFormUsername] = useState<string>(\"\");\n    const [formPassword, setFormPassword] = useState<string>(\"\");\n\n    const onUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFormUsername(event.currentTarget.value);\n    };\n\n    const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFormPassword(event.currentTarget.value);\n    };\n\n    const submitForm = (event: React.MouseEvent<HTMLInputElement>) => {\n        axios\n            .get(process.env.REACT_APP_BACKEND_URL + \"/api/get-users\")\n            .then((res) => {\n                const data = res.data;\n                console.log(data);\n                data.forEach((item: any) => {\n                    const password = item.password;\n                    const username = item.username;\n                    props.signIn(\n                        formPassword === password && formUsername === username,\n                        username\n                    );\n                });\n            });\n    };\n\n    return (\n        <div className=\"form-container\">\n            <form className=\"sign-in-form\">\n                <input\n                    className=\"form-username\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    onChange={onUsernameChange}\n                />\n                <input\n                    className=\"form-password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={onPasswordChange}\n                />\n                <input\n                    className=\"form-submit\"\n                    type=\"submit\"\n                    onClick={submitForm}\n                />\n                <footer>\n                    <span>\n                        <Link to=\"/signUp\">Click here to sign up</Link>\n                    </span>\n                </footer>\n            </form>\n        </div>\n    );\n}\n\nexport default SignInForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype SignInOutProps = {\n    isSignedIn: boolean;\n};\n\nfunction SignInOut({ isSignedIn }: SignInOutProps) {\n    var button;\n    if (isSignedIn) {\n        button = <button className=\"btn sign-btn sign-in-btn\">Sign Out</button>;\n    } else {\n        button = <button className=\"btn sign-btn sign-out-btn\">Sign In</button>;\n    }\n\n    return <Link to={isSignedIn ? \"/signOut\" : \"/signIn\"}>{button}</Link>;\n}\n\nexport default SignInOut;\n","import axios from \"axios\";\nimport { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\n\nfunction SignUpForm() {\n    const [formUsername, setFormUsername] = useState<string>(\"\");\n    const [formPassword, setFormPassword] = useState<string>(\"\");\n\n    const updateUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFormUsername(event.currentTarget.value);\n    }\n\n    const updatePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFormPassword(event.currentTarget.value);\n    }\n\n    const submit = (event: React.MouseEvent<HTMLInputElement>) => {\n        const newUser = {\n            nanoid: nanoid(),\n            name: formUsername,\n            username: formUsername,\n            password: formPassword\n        }\n        axios.post(process.env.REACT_APP_BACKEND_URL + \"/api/add-user\", JSON.stringify(newUser));\n    }\n\n    return(\n        <div className=\"form-container\">\n            <form className=\"sign-up-form\">\n                <input type=\"text\" placeholder=\"Username...\" onChange={updateUsername} />\n                <input type=\"password\" placeholder=\"Password...\" onChange={updatePassword} />\n                <input type=\"submit\" className=\"btn btn-primary\" onClick={submit} />\n            </form>\n        </div>\n    );\n}\n\nexport default SignUpForm;","import React, { useState } from \"react\";\nimport { MdInsertEmoticon } from \"react-icons/md\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Feed from \"./components/Feed\";\nimport SignInForm from \"./components/SignIn/SignInForm\";\nimport SignInOut from \"./components/SignIn/SignInOut\";\nimport SignUpForm from \"./components/SignIn/SignUpForm\";\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n    const [currentUser, setCurrentUser] = useState<string>(\"Anonymous\");\n\n    const signOut = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setIsLoggedIn(false);\n        setCurrentUser(\"Anonymous\")\n    }\n\n    const signIn = (creds: boolean, username: string) => {\n        setIsLoggedIn(creds);\n        if (creds) setCurrentUser(username);\n    }\n\n    return (\n        <div className=\"app-container\">\n            <header className=\"app-header\">\n                <Link className=\"heading-link\" to=\"/\">\n                    <h1>Soc Media</h1>\n                </Link>\n                <div className=\"sub-header\">\n                    <SignInOut isSignedIn={isLoggedIn} />\n                    <MdInsertEmoticon className=\"icon header-icon smile-icon\" />\n                </div>\n            </header>\n            <div className=\"content\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Feed currentUser={currentUser} />\n                    </Route>\n                    <Route path=\"/signIn\">\n                        <SignInForm signIn={signIn} />\n                    </Route>\n                    <Route path=\"/signOut\">\n                        <div className=\"form-container\">\n                            <button className=\"btn\" onClick={signOut}>\n                                Sign Out\n                            </button>\n                        </div>\n                    </Route>\n                    <Route path=\"/signUp\">\n                        <SignUpForm />\n                    </Route>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}